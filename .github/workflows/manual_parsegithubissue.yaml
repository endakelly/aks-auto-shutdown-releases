name: Manual Parse github form
run-name: ${{ github.actor }} - issue:${{ github.event.issue.number }}

on:
  workflow_dispatch:
    inputs:
      PROJECT:
        type: string
        description: "Issue ID"
env:
  GH_TOKEN: ${{ secrets.PLATFORM_USER_TOKEN }}
jobs:
  parse:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          token: ${{ env.GH_TOKEN }}

      - name: Parse issue
        id: parse_issue
        uses: onmax/issue-form-parser@v1.4
        with:
          issue_number: ${{ inputs.PROJECT }}
      
      - name: Show parsed payload data
        run: |
          # Using the character `'` to prevent all characters enclosed within
          # them from being treated as special characters (e.g. $ or `)
          echo '${{ steps.parse_issue.outputs.payload }}'
          echo NEW_DATA='${{ steps.parse_issue.outputs.payload }}' >> $GITHUB_ENV
          echo GITHUB_REPO='${{ github.repository }}' >> $GITHUB_ENV
          echo ISSUE_NUMBER='${{ github.event.issue.number }}' >> $GITHUB_ENV

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' 

      - name: Install python-dateutil
        run: |
          pip3 install python-dateutil

      - name: Delete old entries
        continue-on-error: true
        run: |
          python housekeeping.py
          
      - name: process form data
        continue-on-error: true
        run: |
          python file_handling.py

      - name: Create Issue Comment
        if: env.PROCESS_SUCCESS != 'true'
        uses: peter-evans/create-or-update-comment@v3.0.2
        with:
          issue-number: ${{ inputs.PROJECT }}
          body: |
            ${{ env.ISSUE_COMMENT }}

      - name: Commit to master
        if: env.PROCESS_SUCCESS == 'true'
        run: |
          git config user.name hmcts-platform-operations
          git config user.email github-platform-operations@hmcts.net
          git add .
          git commit -m parseissue-${{ inputs.PROJECT }}
          git push
    
      - name: Close Issue
        if: env.PROCESS_SUCCESS == 'true'
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ inputs.PROJECT }}
          comment: Auto-closing issues


